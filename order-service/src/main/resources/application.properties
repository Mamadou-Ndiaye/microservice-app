##Application properties
#spring.application.name=order-service
server.port=8081
#
## MySQL properties
spring.datasource.url=jdbc:mysql://localhost:3306/order_service_db?createDatabaseIfNotExist=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto= update

#inventory.service.URL= http://localhost:8082/api/inventory
inventory.service.URL= http://inventory-service/api/inventory


spring.application.name=order-service

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

## Resilience4j  properties
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=count_based

## Resilience4j  timeOut properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

## Resilience4j  retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.metrics.enabled=true

## Resilience4j  ratelimiter properties
resilience4j.ratelimiter.metrics.enabled=true
resilience4j.ratelimiter.instances.inventory.register-health-indicator=true
resilience4j.ratelimiter.instances.inventory.limit-for-period=5
resilience4j.ratelimiter.instances.inventory.limit-refresh-period=60s
resilience4j.ratelimiter.instances.inventory.timeout-duration=0s
resilience4j.ratelimiter.instances.inventory.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.inventory.subscribe-for-events=true
resilience4j.ratelimiter.instances.inventory.event-consumer-buffer-size=50


# Kafka properties

# A custom property to hold the name of our Kafka topic:
topic.name= notifyService

# Set up Kafka:
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic

# Configure the producer:
spring.kafka.producer.client-id=notify-service-producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:sn.ucad.orderservice.event.OrderPlaceEvent



